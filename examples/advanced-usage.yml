# Advanced example with multiple binaries and custom platforms
# Place this file in .github/workflows/ in your Rust project

name: Advanced Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release'
        required: true
        default: 'v0.1.0'

jobs:
  release:
    uses: xctions/rust-release/.github/workflows/reusable-rust-release.yml@v2
    with:
      # Build single binary (multi-binary support removed for simplicity)
      binary-name: 'my-app'
      
      # Use workflow input or tag name
      release-tag: ${{ github.event.inputs.version || github.ref_name }}
      
      # Exclude ARM64 platforms for faster builds
      exclude: 'linux-arm64,windows-arm64,mac-arm64'
      
      # Use specific Rust version
      rust-version: '1.75.0'
      
      # Additional cargo flags
      cargo-args: '--release --locked --no-default-features --features production'
      
      # Enable all options
      generate-checksums: true
      create-archives: true
    secrets:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}